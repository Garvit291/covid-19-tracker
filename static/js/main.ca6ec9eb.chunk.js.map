{"version":3,"sources":["constants/colors.js","styles/DisplayPanelsStyles.js","components/DisplayPanels.js","components/Overview.js","styles/OverviewStyles.js","components/Charts.js","components/DisplayTable.js","styles/CovidAppStyles.js","constants/stateCodes.js","components/Map/LinearGradient.js","components/Map/Map.js","components/MapSection.js","styles/MapSection.js","components/Barchart.js","components/CovidApp.js","components/Paper.js","styles/NavbarStyles.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["panel","display","flexDirection","marginBottom","marginTop","backgroundColor","props","isDarkMode","colors","margin","isMiniPanel","padding","borderRadius","boxShadow","heading","fontSize","number","color","title","toLowerCase","paddingTop","paddingBottom","dataChange","DisplayPanels","state","this","classes","className","Component","withStyles","styles","Overview","currentDay","previousDay","dataChanges","isLoading","calculateChange","bind","getData","setData","data","propsData","slice","summary","setState","confirmed","total","recovered","discharged","deaths","activeCases","newObj","Object","keys","reduce","a","k","newState","root","panels","panelContainer","textAlign","justifyContent","alignItems","width","Charts","result","map","dataItem","date","day","active","height","dots","top","right","left","bottom","dataKey","wrapperStyle","type","stroke","activeDot","r","DisplayTable","tableData","items","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","b","key","direction","requestSort","useSortableData","lightText","getClassNamesFor","name","undefined","onClick","item","id","style","header","fontWeight","marginRight","content","contentArea","mapArea","flex","chartArea","minWidth","tableContainer","tableHeading","tinyChartArea","flexWrap","tinyChart","textTransform","tinych","refreshIcon","animationName","animationDuration","animationTimingFunction","animationIterationCount","loadingIcon","from","transform","to","button","border","fontFamily","marginLeft","transition","position","outline","opacity","zIndex","Assam","Bihar","Chhattisgarh","Goa","Gujarat","Haryana","Jharkhand","Karnataka","Kerala","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telengana","Tripura","Uttarakhand","Chandigarh","Delhi","Ladakh","Lakshadweep","Puducherry","LinearGradient","boxStyle","gradientStyle","backgroundImage","fromColor","toColor","min","max","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","hover","fill","pressed","Map","onMouseEnter","geo","current","value","tooltipContent","properties","currentLocation","onMouseLeave","mapData","gradientData","length","colorScale","scaleQuantile","domain","d","range","projectionConfig","projection","data-tip","geography","INDIA_TOPO_JSON","geographies","find","s","rsmKey","MapSection","changed","location","stateName","replace","regional","previousData","console","log","updatedData","filter","el","loc","previousUpdatedData","totalConfirmed","mainContainer","para","container","panelsContainer","singlePanel","mapContainer","Barchart","CovidApp","fetchData","formatData","findId","handleFormat","axios","get","response","st","flat","region","i","entries","stateCodes","newdata","setDarkMode","icon","faSyncAlt","btnBox","onChange","loadingStatus","background","Paper","darkMode","children","nav","navItems","listStyle","navItem","navLinks","textDecoration","iconBox","icons","animation","Navbar","exact","activeClassName","faHome","faHeadSideCough","faFlask","faQuestionCircle","App","e","target","checked","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca6ec9eb.chunk.js","sourcesContent":["export default {\r\n  purple: \"#6236FF\",\r\n  red: \"#F9345E\",\r\n  green: \"#1CB142\",\r\n  orange: \"#FA6400\",\r\n  darkPurple: \"#1A1053\",\r\n  lightPurple: \"#817C9B\",\r\n};\r\n\r\n//  purple: rgb(98, 54, 255);\r\n//  red: rgb(249, 52, 94);\r\n//  green: rgb(28, 177, 66);\r\n//  orange: rgb(250, 100, 0);\r\n//  darkPurple: rgb(26, 16, 83);\r\n//  lightPurple: rgb(129, 124, 155);\r\n","import colors from \"../constants/colors\";\r\n\r\nexport default {\r\n  panel: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: \"3.5rem\",\r\n    marginTop: \"3.5rem\",\r\n    // boxShadow: \"0 1rem 2rem rgba(0, 0, 0, 0.05)\",\r\n    backgroundColor: (props) => (props.isDarkMode ? colors.darkPurple : \"#fff\"),\r\n    margin: (props) => (props.isMiniPanel ? \"3rem 1rem\" : \"3.5rem 0\"),\r\n    padding: (props) => (props.isMiniPanel ? \"1.5rem 1.5rem\" : \"1.5rem 3rem\"),\r\n    borderRadius: (props) => (props.isMiniPanel ? \"2rem\" : \"2.5rem\"),\r\n\r\n    boxShadow: (props) => {\r\n      if (props.isMiniPanel) {\r\n        return null;\r\n      }\r\n      return \"0 1.5rem 3rem rgba(0, 0, 0, 0.1)\";\r\n      // let color;\r\n      // let title = props.title.toLowerCase();\r\n      // if (title === \"recovered\") {\r\n      //   color = \"rgb(28, 177, 66,.2)\";\r\n      // } else if (title === \"deceased\") {\r\n      //   color = \"rgb(98, 54, 25,.2)\";\r\n      // } else if (title === \"active\") {\r\n      //   color = \"rgb(250, 100, 0,.2)\";\r\n      // } else if (title === \"confirmed\") {\r\n      //   color = \"rgb(249, 52, 94,.2)\";\r\n      // }\r\n      // return `0 .5rem 3rem ${color}`;\r\n    },\r\n  },\r\n\r\n  heading: {\r\n    fontSize: (props) => (props.isMiniPanel ? \"1.5rem\" : \"2rem\"),\r\n  },\r\n\r\n  number: {\r\n    color: (props) => {\r\n      let color;\r\n      let title = props.title.toLowerCase();\r\n      if (title === \"recovered\") {\r\n        color = colors.green;\r\n      } else if (title === \"deceased\") {\r\n        color = colors.purple;\r\n      } else if (title === \"active\") {\r\n        color = colors.orange;\r\n      } else if (title === \"confirmed\") {\r\n        color = colors.red;\r\n      }\r\n      return color;\r\n    },\r\n    fontSize: (props) => (props.isMiniPanel ? \"2.2rem\" : \"3.5rem\"),\r\n    paddingTop: \".5rem\",\r\n    paddingBottom: \".5rem\",\r\n  },\r\n\r\n  dataChange: {\r\n    fontSize: (props) => (props.isMiniPanel ? \"1.4rem\" : \"inherit\"),\r\n    color: (props) => {\r\n      let color;\r\n      let title = props.title.toLowerCase();\r\n      if (title === \"recovered\") {\r\n        color = colors.green;\r\n      } else if (title === \"deceased\") {\r\n        color = colors.purple;\r\n      } else if (title === \"active\") {\r\n        color = colors.orange;\r\n      } else if (title === \"confirmed\") {\r\n        color = colors.red;\r\n      }\r\n      return color;\r\n    },\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"../styles/DisplayPanelsStyles\";\r\n\r\nclass DisplayPanels extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { title, number, dataChange, classes } = this.props;\r\n    return (\r\n      <div className={classes.panel}>\r\n        <h3 className={classes.heading}>{title}</h3>\r\n        <h3 className={classes.number}>{number}</h3>\r\n        <p className={classes.dataChange}>\r\n          {dataChange > 0 ? \"+\" : \"\"}\r\n          {dataChange}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(DisplayPanels);\r\n","import React, { Component } from \"react\";\r\nimport DisplayPanels from \"./DisplayPanels\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"../styles/OverviewStyles\";\r\n\r\nclass Overview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDay: {},\r\n      previousDay: {},\r\n      dataChanges: {},\r\n      isLoading: false,\r\n    };\r\n    this.calculateChange = this.calculateChange.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(this.props.data);\r\n  }\r\n\r\n  setData() {\r\n    this.getData();\r\n  }\r\n\r\n  getData(propsData) {\r\n    const data = propsData.slice(-2);\r\n    try {\r\n      const previousDay = data[0].summary;\r\n      const currentDay = data[1].summary;\r\n      this.setState(\r\n        {\r\n          previousDay: {\r\n            confirmed: previousDay.total,\r\n            recovered: previousDay.discharged,\r\n            deaths: previousDay.deaths,\r\n            activeCases:\r\n              previousDay.total - (previousDay.discharged + previousDay.deaths),\r\n          },\r\n          currentDay: {\r\n            confirmed: currentDay.total,\r\n            recovered: currentDay.discharged,\r\n            deaths: currentDay.deaths,\r\n            activeCases:\r\n              currentDay.total - (currentDay.discharged + currentDay.deaths),\r\n          },\r\n        },\r\n        this.calculateChange\r\n      );\r\n    } catch {}\r\n  }\r\n\r\n  calculateChange() {\r\n    const { previousDay, currentDay } = this.state;\r\n    let newObj = Object.keys(currentDay).reduce((a, k) => {\r\n      a[k] = currentDay[k] - previousDay[k];\r\n      return a;\r\n    }, {});\r\n    const newState = {\r\n      ...this.state,\r\n      dataChanges: newObj,\r\n    };\r\n    this.setState({\r\n      ...newState,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { confirmed, recovered, deaths, activeCases } = this.state.currentDay;\r\n    const dataChange = this.state.dataChanges;\r\n    const { classes, isDarkMode } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.panels}>\r\n          <div className={classes.panelContainer}>\r\n            <DisplayPanels\r\n              title=\"Confirmed\"\r\n              number={confirmed}\r\n              isDarkMode={isDarkMode}\r\n              dataChange={dataChange.confirmed}\r\n            />\r\n          </div>\r\n          <div className={classes.panelContainer}>\r\n            <DisplayPanels\r\n              title=\"Active\"\r\n              number={activeCases}\r\n              isDarkMode={isDarkMode}\r\n              dataChange={dataChange.activeCases}\r\n            />\r\n          </div>\r\n          <div className={classes.panelContainer}>\r\n            <DisplayPanels\r\n              title=\"Recovered\"\r\n              number={recovered}\r\n              isDarkMode={isDarkMode}\r\n              dataChange={dataChange.recovered}\r\n            />\r\n          </div>\r\n          <div className={classes.panelContainer}>\r\n            <DisplayPanels\r\n              title=\"Deceased\"\r\n              number={deaths}\r\n              isDarkMode={isDarkMode}\r\n              dataChange={dataChange.deaths}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Overview);\r\n","export default {\r\n  root: {\r\n    textAlign: \"center\",\r\n  },\r\n  panels: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n  panelContainer: {\r\n    width: \"20%\",\r\n    // padding: ''\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport colors from \"../constants/colors\";\r\nimport \"../styles/Charts.css\";\r\n\r\nexport default class Charts extends Component {\r\n  render() {\r\n    const { data, isLoading } = this.props;\r\n    const result = data.map((dataItem) => {\r\n      return {\r\n        date: dataItem.day.slice(5),\r\n        ...dataItem.summary,\r\n        confirmed: dataItem.summary.total,\r\n        active:\r\n          dataItem.summary.total -\r\n          (dataItem.summary.discharged + dataItem.summary.deaths),\r\n      };\r\n    });\r\n    return (\r\n      <div className=\"charts\">\r\n        {!isLoading && (\r\n          <LineChart\r\n            width={600}\r\n            height={300}\r\n            data={result}\r\n            dots={false}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n            <Tooltip />\r\n            <Legend\r\n              wrapperStyle={{\r\n                margin: \"-3rem 1rem\",\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"confirmed\"\r\n              stroke={colors.red}\r\n              activeDot={{ r: 8 }}\r\n            />\r\n            <Line type=\"monotone\" dataKey=\"active\" stroke={colors.orange} />\r\n            <Line type=\"monotone\" dataKey=\"discharged\" stroke={colors.green} />\r\n            <Line type=\"monotone\" dataKey=\"deaths\" stroke={colors.purple} />\r\n          </LineChart>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/DisplayTable.css\";\r\n\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n  const sortedItems = React.useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst DisplayTable = ({ tableData, isDarkMode }) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(tableData);\r\n  const lightText = {\r\n    color: isDarkMode && \"rgba(255,255,255,.75)\",\r\n  };\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  return (\r\n    <table>\r\n      {/* <caption>Products</caption> */}\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => requestSort(\"name\")}\r\n              className={getClassNamesFor(\"name\")}\r\n            >\r\n              Name\r\n            </button>\r\n          </th>\r\n          <th>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => requestSort(\"confirmed\")}\r\n              className={getClassNamesFor(\"confirmed\")}\r\n            >\r\n              Confirmed\r\n            </button>\r\n          </th>\r\n          <th>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => requestSort(\"active\")}\r\n              className={getClassNamesFor(\"active\")}\r\n            >\r\n              Active\r\n            </button>\r\n          </th>\r\n          <th>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => requestSort(\"discharged\")}\r\n              className={getClassNamesFor(\"discharged\")}\r\n            >\r\n              Recovered\r\n            </button>\r\n          </th>\r\n          <th>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => requestSort(\"deaths\")}\r\n              className={getClassNamesFor(\"deaths\")}\r\n            >\r\n              Deceased\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td style={lightText}>{item.name}</td>\r\n            <td style={lightText}>{item.confirmed}</td>\r\n            <td style={lightText}>{item.active}</td>\r\n            <td style={lightText}>{item.discharged}</td>\r\n            <td style={lightText}>{item.deaths}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;\r\n","import colors from \"../constants/colors\";\r\n\r\nexport default {\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  heading: {\r\n    fontWeight: \"500\",\r\n    color: (props) =>\r\n      props.isDarkMode ? \"rgb(245, 245, 245)\" : colors.darkPurple,\r\n    display: \"inline-block\",\r\n    \"& span\": {\r\n      fontWeight: \"900\",\r\n      color: colors.purple,\r\n      marginRight: \"1rem\",\r\n    },\r\n  },\r\n\r\n  content: {\r\n    backgroundColor: (props) => (props.isDarkMode ? colors.darkPurple : \"#fff\"),\r\n    borderRadius: \"2rem\",\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    padding: \"4rem\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  contentArea: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  mapArea: {\r\n    flex: \"1\",\r\n  },\r\n\r\n  chartArea: {\r\n    minWidth: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  tableContainer: {\r\n    padding: \"2rem\",\r\n    margin: \"5rem 0\",\r\n  },\r\n\r\n  tableHeading: {\r\n    textAlign: \"center\",\r\n    margin: \"4rem 0\",\r\n    fontSize: \"3rem\",\r\n  },\r\n\r\n  tinyChartArea: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"2rem 2rem\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    marginTop: \"5rem\",\r\n  },\r\n\r\n  tinyChart: {\r\n    // width: \"50%\",\r\n    margin: \"2.5rem\",\r\n    \"& h3\": {\r\n      textTransform: \"capitalize\",\r\n      fontWeight: 500,\r\n\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n\r\n  tinych: {\r\n    borderRadius: \".5rem\",\r\n    marginBottom: \".5rem\",\r\n    padding: \"1rem\",\r\n  },\r\n\r\n  refreshIcon: {\r\n    fontSize: \"10rem\",\r\n    animationName: \"$rotation\",\r\n    animationDuration: \"1s\",\r\n    animationTimingFunction: \"linear\",\r\n    animationIterationCount: \"infinite\",\r\n  },\r\n\r\n  loadingIcon: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  \"@keyframes rotation\": {\r\n    from: {\r\n      transform: \"rotate(0deg)\",\r\n    },\r\n    to: {\r\n      transform: \"rotate(359deg)\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    border: \"none\",\r\n    backgroundColor: colors.purple,\r\n    padding: \"1.5rem 3rem\",\r\n    color: \"#fff\",\r\n    borderRadius: \"10rem\",\r\n    fontFamily: \"inherit\",\r\n    fontSize: \"1.6rem\",\r\n    marginLeft: \"2rem\",\r\n    transition: \"all .4s\",\r\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,.2)\",\r\n    position: \"relative\",\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: colors.darkPurple,\r\n      boxShadow: \"0 .25rem .5rem rgba(0,0,0,.2)\",\r\n      outline: \"none\",\r\n      border: \"none\",\r\n\r\n      \"&::before\": {\r\n        transform: \"scaleX(1.4) scaleY(1.6)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n\r\n    \"&:focus\": {\r\n      border: \"none\",\r\n      outline: \"none\",\r\n    },\r\n\r\n    \"&:hover svg\": {\r\n      animationName: \"$rotation\",\r\n      animationDuration: \"1s\",\r\n      animationTimingFunction: \"linear\",\r\n      animationIterationCount: \"infinite\",\r\n    },\r\n\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      display: \"inline-block\",\r\n      backgroundColor: colors.purple,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: 0,\r\n      left: 0,\r\n      borderRadius: \"10rem\",\r\n      transition: \"all .4s\",\r\n      zIndex: -1,\r\n    },\r\n  },\r\n};\r\n","export default {\r\n  \"Andhra Pradesh\": \"AP\",\r\n  \"Arunachal Pradesh\": \"AR\",\r\n  Assam: \"AS\",\r\n  Bihar: \"BR\",\r\n  Chhattisgarh: \"CT\",\r\n  Goa: \"GA\",\r\n  Gujarat: \"GJ\",\r\n  Haryana: \"HR\",\r\n  \"Himachal Pradesh\": \"HP\",\r\n  Jharkhand: \"JH\",\r\n  Karnataka: \"KA\",\r\n  Kerala: \"KL\",\r\n  \"Madhya Pradesh\": \"MP\",\r\n  Maharashtra: \"MH\",\r\n  Manipur: \"MN\",\r\n  Meghalaya: \"ML\",\r\n  Mizoram: \"MZ\",\r\n  Nagaland: \"NL\",\r\n  Odisha: \"OR\",\r\n  Punjab: \"PB\",\r\n  Rajasthan: \"RJ\",\r\n  Sikkim: \"SK\",\r\n  \"Tamil Nadu\": \"TN\",\r\n  Telengana: \"TG\",\r\n  Tripura: \"TR\",\r\n  Uttarakhand: \"UT\",\r\n  \"Uttar Pradesh\": \"UP\",\r\n  \"West Bengal\": \"WB\",\r\n  \"Andaman and Nicobar Islands\": \"AN\",\r\n  Chandigarh: \"CH\",\r\n  \"Dadra and Nagar Haveli\": \"DN\",\r\n  \"Daman and Diu\": \"DD\",\r\n  Delhi: \"DL\",\r\n  \"Jammu and Kashmir\": \"JK\",\r\n  Ladakh: \"LA\",\r\n  Lakshadweep: \"LD\",\r\n  Puducherry: \"PY\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./LinearGradient.css\";\r\n\r\nconst LinearGradient = (props) => {\r\n  const { data } = props;\r\n  const boxStyle = {\r\n    width: 180,\r\n    margin: \"auto\",\r\n  };\r\n  const gradientStyle = {\r\n    backgroundImage: `linear-gradient(to right, ${data.fromColor} , ${data.toColor})`,\r\n    height: 20,\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={boxStyle} className=\"display-flex\">\r\n        <span>{data.min}</span>\r\n        <span className=\"fill\"></span>\r\n        <span>{data.max}</span>\r\n      </div>\r\n      <div style={{ ...boxStyle, ...gradientStyle }} className=\"mt8\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLinearGradient.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default LinearGradient;\r\n","import React, { Component } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleQuantile } from \"d3-scale\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport LinearGradient from \"./LinearGradient.js\";\r\nimport INDIA_TOPO_JSON from \"./india.topo.json\";\r\nimport \"./Map.css\";\r\n\r\n/**\r\n * Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\r\n * Looking topojson for other countries/world?\r\n * Visit: https://github.com/markmarkoh/datamaps\r\n */\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  \"#ffedea\",\r\n  \"#ffcec5\",\r\n  \"#ffad9f\",\r\n  \"#ff8a75\",\r\n  \"#ff5533\",\r\n  \"#e2492d\",\r\n  \"#be3d26\",\r\n  \"#9a311f\",\r\n  \"#782618\",\r\n];\r\n\r\nconst DEFAULT_COLOR = \"#EEE\";\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: \"none\",\r\n  },\r\n  hover: {\r\n    fill: \"#ccc\",\r\n    transition: \"all 250ms\",\r\n    outline: \"none\",\r\n  },\r\n  pressed: {\r\n    outline: \"none\",\r\n  },\r\n};\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tooltipContent: \"\",\r\n      data: [\r\n        { id: \"AP\", state: \"Andhra Pradesh\", value: 5 },\r\n        { id: \"AR\", state: \"Arunachal Pradesh\", value: 2 },\r\n      ],\r\n    };\r\n  }\r\n\r\n  onMouseEnter = (geo, current = { value: \"NA\" }) => {\r\n    return () => {\r\n      this.setState(\r\n        {\r\n          tooltipContent: `${geo.properties.name}: ${current.value}`,\r\n        },\r\n        () => this.props.currentLocation(geo.properties.name)\r\n      );\r\n    };\r\n  };\r\n\r\n  onMouseLeave = () => {\r\n    this.setState({ tooltipContent: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const data = this.props.mapData;\r\n    const gradientData = {\r\n      fromColor: COLOR_RANGE[0],\r\n      toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n      min: 0,\r\n      max: data.reduce((max, item) => (item.value > max ? item.value : max), 0),\r\n    };\r\n\r\n    const colorScale = scaleQuantile()\r\n      .domain(data.map((d) => d.value))\r\n      .range(COLOR_RANGE);\r\n\r\n    return (\r\n      <div>\r\n        <ReactTooltip>{this.state.tooltipContent}</ReactTooltip>\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={600}\r\n          height={220}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const current = data.find((s) => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={this.onMouseEnter(geo, current)}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n        <LinearGradient data={gradientData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React, { Component } from \"react\";\r\nimport DisplayPanels from \"./DisplayPanels\";\r\nimport Map from \"./Map/Map\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"../styles/MapSection\";\r\n\r\nclass MapSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      confirmed: \"-\",\r\n      deaths: \"-\",\r\n      recovered: \"-\",\r\n      active: \"-\",\r\n      changed: {\r\n        title: \"\",\r\n        confirmed: \"-\",\r\n        deaths: \"-\",\r\n        recovered: \"-\",\r\n        active: \"-\",\r\n      },\r\n    };\r\n    this.currentLocation = this.currentLocation.bind(this);\r\n  }\r\n\r\n  currentLocation(location) {\r\n    const stateName = location.replace(\" & \", \" and \");\r\n    const data = this.props.data.slice(-1)[0].regional;\r\n    const previousData = this.props.data.slice(-2, -1)[0].regional;\r\n\r\n    console.log(data);\r\n    console.log(previousData);\r\n\r\n    const updatedData = data.filter((el) => el.loc === stateName);\r\n    const previousUpdatedData = previousData.filter(\r\n      (el) => el.loc === stateName\r\n    );\r\n\r\n    if (updatedData[0]) {\r\n      this.setState({\r\n        title: stateName,\r\n        confirmed: updatedData[0].totalConfirmed,\r\n        deaths: updatedData[0].deaths,\r\n        recovered: updatedData[0].discharged,\r\n        active:\r\n          updatedData[0].totalConfirmed -\r\n          (updatedData[0].discharged + updatedData[0].deaths),\r\n        changed: {\r\n          confirmed:\r\n            updatedData[0].totalConfirmed -\r\n            previousUpdatedData[0].totalConfirmed,\r\n          deaths: updatedData[0].deaths - previousUpdatedData[0].deaths,\r\n          recovered:\r\n            updatedData[0].discharged - previousUpdatedData[0].discharged,\r\n          active:\r\n            updatedData[0].totalConfirmed -\r\n            (updatedData[0].discharged + updatedData[0].deaths) -\r\n            (previousUpdatedData[0].totalConfirmed -\r\n              (previousUpdatedData[0].discharged +\r\n                previousUpdatedData[0].deaths)),\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        title: stateName,\r\n        confirmed: \"NA\",\r\n        deaths: \"NA\",\r\n        recovered: \"NA\",\r\n        active: \"NA\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, mapData, isDarkMode } = this.props;\r\n    const { confirmed, deaths, recovered, active, title, changed } = this.state;\r\n    return (\r\n      <div className={classes.mainContainer}>\r\n        <h4 className={classes.heading}>State/UT: {title}</h4>\r\n        <p className={classes.para}>\r\n          hover over the states in the map to view the stats\r\n        </p>\r\n        <div className={classes.container}>\r\n          <div className={classes.panelsContainer}>\r\n            <div className={classes.singlePanel}>\r\n              <DisplayPanels\r\n                title=\"Confirmed\"\r\n                number={confirmed}\r\n                isDarkMode={isDarkMode}\r\n                dataChange={changed.confirmed}\r\n                isMiniPanel={true}\r\n              />\r\n            </div>\r\n            <div className={classes.singlePanel}>\r\n              <DisplayPanels\r\n                title=\"Active\"\r\n                number={active}\r\n                isDarkMode={isDarkMode}\r\n                dataChange={changed.active}\r\n                isMiniPanel={true}\r\n              />\r\n            </div>\r\n            <div className={classes.singlePanel}>\r\n              <DisplayPanels\r\n                title=\"Recovered\"\r\n                number={recovered}\r\n                isDarkMode={isDarkMode}\r\n                dataChange={changed.recovered}\r\n                isMiniPanel={true}\r\n              />\r\n            </div>\r\n            <div className={classes.singlePanel}>\r\n              <DisplayPanels\r\n                title=\"Deceased\"\r\n                number={deaths}\r\n                isDarkMode={isDarkMode}\r\n                dataChange={changed.deaths}\r\n                isMiniPanel={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.mapContainer}>\r\n            <Map mapData={mapData} currentLocation={this.currentLocation} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MapSection);\r\n","export default {\r\n  mainContainer: {\r\n    backgroundColor: \"rgba(129, 124, 155, 0.05)\",\r\n    padding: \"7rem 3rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  heading: {\r\n    fontSize: \"2.5rem\",\r\n  },\r\n  para: {\r\n    marginBottom: \"3rem\",\r\n    color: \"#bbb\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  mapContainer: {\r\n    flex: \"1\",\r\n  },\r\n  panelsContainer: {\r\n    display: \"flex\",\r\n    flex: \"0 0 30%\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n  },\r\n  singlePanel: {\r\n    width: \"50%\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nexport default class Barchart extends Component {\r\n  render() {\r\n    const { data, isLoading, dataKey, stroke } = this.props;\r\n    // const updatedData = data.slice(25, -1);\r\n    const result = data.map((dataItem) => {\r\n      return {\r\n        date: dataItem.day.slice(5),\r\n        ...dataItem.summary,\r\n        confirmed: dataItem.summary.total,\r\n        active:\r\n          dataItem.summary.total -\r\n          (dataItem.summary.discharged + dataItem.summary.deaths),\r\n      };\r\n    });\r\n    return (\r\n      <div className=\"charts\">\r\n        {!isLoading && (\r\n          <BarChart\r\n            width={350}\r\n            height={150}\r\n            data={result}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            {/* <Legend /> */}\r\n            <Bar dataKey={dataKey} fill={stroke} />\r\n          </BarChart>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Overview from \"./Overview\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport colors from \"../constants/colors\";\r\nimport Charts from \"./Charts\";\r\nimport DisplayTable from \"./DisplayTable\";\r\nimport styles from \"../styles/CovidAppStyles\";\r\nimport axios from \"axios\";\r\nimport stateCodes from \"../constants/stateCodes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/DarkModeButton.css\";\r\nimport MapSection from \"./MapSection\";\r\nimport Barchart from \"./Barchart\";\r\n\r\nclass CovidApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false,\r\n      mapData: [],\r\n      tableData: [],\r\n    };\r\n\r\n    this.fetchData = this.fetchData.bind(this);\r\n    this.formatData = this.formatData.bind(this);\r\n    this.findId = this.findId.bind(this);\r\n    this.handleFormat = this.handleFormat.bind(this);\r\n    this.tableData = this.tableData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    this.setState({ isLoading: !this.state.isLoading });\r\n    const response = await axios.get(\r\n      \"https://api.rootnet.in/covid19-in/stats/history\"\r\n    );\r\n    this.setState(\r\n      (st) => ({\r\n        data: response.data.data,\r\n        isLoading: !st.isLoading,\r\n      }),\r\n      this.handleFormat\r\n    );\r\n  }\r\n\r\n  formatData(data) {\r\n    const newArr = data.slice(-1).map((data) => data.regional);\r\n    const formatedData = newArr.flat().map((region, i) => {\r\n      return {\r\n        id: this.findId(region.loc),\r\n        state: region.loc.replace(\" and \", \" & \"),\r\n        value: region.totalConfirmed,\r\n      };\r\n    });\r\n    return formatedData;\r\n  }\r\n\r\n  tableData(data) {\r\n    const newArr = data\r\n      .slice(-1)\r\n      .map((data) => data.regional)\r\n      .flat();\r\n    const newData = newArr.map((region, i) => {\r\n      return {\r\n        id: region.loc,\r\n        name: region.loc,\r\n        deaths: region.deaths,\r\n        discharged: region.discharged,\r\n        confirmed: region.totalConfirmed,\r\n        active: region.totalConfirmed - (region.discharged + region.deaths),\r\n      };\r\n    });\r\n    return newData;\r\n  }\r\n\r\n  findId(location) {\r\n    for (let [key, value] of Object.entries(stateCodes)) {\r\n      if (location === key) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFormat() {\r\n    const newdata = this.formatData(this.state.data);\r\n    const tableData = this.tableData(this.state.data);\r\n    this.setState({ mapData: newdata, tableData: tableData });\r\n  }\r\n\r\n  render() {\r\n    const { classes, setDarkMode, isDarkMode } = this.props;\r\n    const { mapData, tableData, isLoading, data } = this.state;\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div className={classes.loadingIcon}>\r\n          <FontAwesomeIcon icon={faSyncAlt} className={classes.refreshIcon} />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <div className={classes.header}>\r\n          <h1 className={classes.heading}>\r\n            <span>Covid-19</span> India Trend\r\n          </h1>\r\n          <div className={classes.btnBox}>\r\n            <FontAwesomeIcon\r\n              icon={faSyncAlt}\r\n              className={classes.button}\r\n              onClick={this.fetchData}\r\n            />\r\n          </div>\r\n          <div className=\"darkModeButton\">\r\n            <label className=\"switch\">\r\n              <input type=\"checkbox\" onChange={setDarkMode} />\r\n              <span className=\"slider round\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <Overview\r\n          isDarkMode={isDarkMode}\r\n          data={this.state.data}\r\n          loadingStatus={this.loadingStatus}\r\n        />\r\n        {!this.state.isLoading && (\r\n          <div className={classes.content}>\r\n            <div className={classes.contentArea}>\r\n              <div className={classes.mapArea}>\r\n                {/* <Map mapData={mapData} /> */}\r\n                <MapSection\r\n                  mapData={mapData}\r\n                  data={data}\r\n                  isDarkMode={isDarkMode}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={classes.chartArea}>\r\n              <Charts data={this.state.data} isLoading={this.state.isLoading} />\r\n              <div className={classes.tinyChartArea}>\r\n                <div className={classes.tinyChart}>\r\n                  <div\r\n                    className={classes.tinych}\r\n                    style={{ background: \"rgba(249, 52, 94,.1)\" }}\r\n                  >\r\n                    <h3 style={{ color: colors.red }}>confirmed</h3>\r\n                    <Barchart\r\n                      data={this.state.data}\r\n                      isLoading={this.state.isLoading}\r\n                      dataKey=\"confirmed\"\r\n                      stroke={colors.red}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={classes.tinyChart}>\r\n                  <div\r\n                    className={classes.tinych}\r\n                    style={{ background: \"rgba(250, 100, 0,.1)\" }}\r\n                  >\r\n                    <h3 style={{ color: colors.orange }}>active</h3>\r\n                    <Barchart\r\n                      data={this.state.data}\r\n                      isLoading={this.state.isLoading}\r\n                      dataKey=\"active\"\r\n                      stroke={colors.orange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={classes.tinyChart}>\r\n                  <div\r\n                    className={classes.tinych}\r\n                    style={{ background: \"rgba(28, 177, 66,.1)\" }}\r\n                  >\r\n                    <h3 style={{ color: colors.green }}>Recovered</h3>\r\n                    <Barchart\r\n                      data={this.state.data}\r\n                      isLoading={this.state.isLoading}\r\n                      dataKey=\"discharged\"\r\n                      stroke={colors.green}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={classes.tinyChart}>\r\n                  <div\r\n                    className={classes.tinych}\r\n                    style={{ background: \"rgba(98, 54, 255,.1)\" }}\r\n                  >\r\n                    <h3 style={{ color: colors.purple }}>Deceased</h3>\r\n                    <Barchart\r\n                      data={this.state.data}\r\n                      isLoading={this.state.isLoading}\r\n                      dataKey=\"deaths\"\r\n                      stroke={colors.purple}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.tableContainer}>\r\n              <h2 className={classes.tableHeading}>\r\n                State/UT Wise Data (Sortable){\" \"}\r\n              </h2>\r\n              <DisplayTable tableData={tableData} isDarkMode={isDarkMode} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CovidApp);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  darkMode: {\r\n    backgroundColor: \"#121212\",\r\n    color: \"rgba(255,255,255,.75)\",\r\n  },\r\n};\r\n\r\nclass Paper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { isDarkMode, classes } = this.props;\r\n    return (\r\n      <div className={isDarkMode ? classes.darkMode : undefined}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Paper);\r\n","import colors from \"../constants/colors\";\r\n\r\nexport default {\r\n  nav: {\r\n    marginTop: \"12rem\",\r\n    // padding: \"2rem 5rem\",\r\n  },\r\n  navItems: {\r\n    listStyle: \"none\",\r\n  },\r\n  navItem: {\r\n    marginBottom: \"5rem\",\r\n    fontWeight: \"500\",\r\n    position: \"relative\",\r\n  },\r\n  navLinks: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  iconBox: {\r\n    display: \"flex\",\r\n    zIndex: \"50\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \".1rem .5rem\",\r\n\r\n    \"& p\": {\r\n      zIndex: \"50\",\r\n    },\r\n  },\r\n  icons: {\r\n    fontSize: \"2.5rem\",\r\n    zIndex: \"50\",\r\n    padding: \"1rem 0\",\r\n  },\r\n\r\n  active: {\r\n    \"& div\": {\r\n      color: (props) =>\r\n        props.isDarkMode ? \"rgb(245, 245, 245)\" : colors.purple,\r\n      zIndex: \"10\",\r\n      position: \"relative\",\r\n      animation: \"$float 2s ease infinite\",\r\n\r\n      \"&::before\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        width: \"155%\",\r\n        height: \"110%\",\r\n        display: \"block\",\r\n        backgroundColor: (props) =>\r\n          props.isDarkMode ? colors.lightPurple : \"rgb(245, 245, 245)\",\r\n        transform: \"translateX(2rem) skewX(10deg)\",\r\n        borderRadius: \"25px\",\r\n        zIndex: 10,\r\n      },\r\n      \"&::after\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        width: \"130%\",\r\n        height: \"110%\",\r\n        display: \"block\",\r\n        top: 0,\r\n        left: 0,\r\n        backgroundColor: (props) =>\r\n          props.isDarkMode ? \"rgba(255,255,255,.6)nop\" : colors.lightPurple,\r\n        transform: \"translate(-1rem, .1rem) skew(10deg, -5deg)\",\r\n        borderRadius: \"25px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  \"@keyframes float\": {\r\n    \"0%\": {\r\n      boxShadow: \"0 5px 15px 0px rgba(0,0,0,0.6)\",\r\n      transform: \"translateY(0px)\",\r\n    },\r\n    \"50%\": {\r\n      boxShadow: \"0 25px 15px 0px rgba(0,0,0,0.2)\",\r\n      transform: \"translateY(-5px)\",\r\n    },\r\n    \"100%\": {\r\n      boxShadow: \"0 5px 15px 0px rgba(0,0,0,0.6)\",\r\n      transform: \"translateY(0px)\",\r\n    },\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faHeadSideCough,\r\n  faFlask,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"../styles/NavbarStyles\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <nav className={classes.nav}>\r\n        <ul className={classes.navItems}>\r\n          <li className={classes.navItem}>\r\n            <NavLink\r\n              exact\r\n              to=\"/\"\r\n              className={classes.navLinks}\r\n              activeClassName={classes.active}\r\n            >\r\n              <div className={classes.iconBox}>\r\n                <FontAwesomeIcon icon={faHome} className={classes.icons} />\r\n                <p>Overview</p>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.navItem}>\r\n            <NavLink\r\n              exact\r\n              to=\"/symptoms\"\r\n              className={classes.navLinks}\r\n              activeClassName={classes.active}\r\n            >\r\n              <div className={classes.iconBox}>\r\n                <FontAwesomeIcon\r\n                  icon={faHeadSideCough}\r\n                  className={classes.icons}\r\n                />\r\n                <p>Symptoms</p>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.navItem}>\r\n            <NavLink\r\n              exact\r\n              to=\"/stay-safe\"\r\n              className={classes.navLinks}\r\n              activeClassName={classes.active}\r\n            >\r\n              <div className={classes.iconBox}>\r\n                <FontAwesomeIcon icon={faFlask} className={classes.icons} />\r\n                <p>Test Yourself</p>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.navItem}>\r\n            <NavLink\r\n              exact\r\n              to=\"/help\"\r\n              className={classes.navLinks}\r\n              activeClassName={classes.active}\r\n            >\r\n              <div className={classes.iconBox}>\r\n                <FontAwesomeIcon\r\n                  icon={faQuestionCircle}\r\n                  className={classes.icons}\r\n                />\r\n                <p>Help</p>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport CovidApp from \"./components/CovidApp\";\r\nimport Paper from \"./components/Paper\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDarkMode: false,\r\n    };\r\n    this.setDarkMode = this.setDarkMode.bind(this);\r\n  }\r\n\r\n  setDarkMode(e) {\r\n    this.setState({ isDarkMode: e.target.checked });\r\n  }\r\n\r\n  render() {\r\n    const { isDarkMode } = this.state;\r\n    return (\r\n      <Paper isDarkMode={this.state.isDarkMode}>\r\n        <div className=\"root\">\r\n          <div className=\"navBar\">\r\n            <Navbar isDarkMode={isDarkMode} />\r\n          </div>\r\n          <div className=\"mainContent\">\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => (\r\n                  <CovidApp\r\n                    setDarkMode={this.setDarkMode}\r\n                    isDarkMode={this.state.isDarkMode}\r\n                  />\r\n                )}\r\n              />\r\n              <Route exact path=\"/symptoms\" render={() => <h1>symptoms</h1>} />\r\n              <Route\r\n                exact\r\n                path=\"/stay-safe\"\r\n                render={() => <h1>Stay Safe</h1>}\r\n              />\r\n              <Route exact path=\"/help\" render={() => <h1>Help Page</h1>} />\r\n              <Route\r\n                path=\"/\"\r\n                render={() => (\r\n                  <CovidApp\r\n                    setDarkMode={this.setDarkMode}\r\n                    isDarkMode={this.state.isDarkMode}\r\n                  />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}